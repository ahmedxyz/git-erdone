#!/bin/sh

branch_name=$(cat "${BASH_SOURCE%/*}/var.txt")
yellow="\033[1;33m"

if [[ -n "$1" ]] # check if input is a non-empty string
then
    if [[ ${#1} -ge 8 && "$1" =~ ^sc-[0-9]{5} ]] # check if input is valid branch name
    then
        branch_name="${1}"
        echo $branch_name > "${BASH_SOURCE%/*}/var.txt"
        ### DEFINE START ROUTINE HERE ###
        git checkout master
        git pull --rebase
        git checkout -b "$branch_name"
        echo "${yellow}Happy trails partner!"
        ### END START ROUTINE ###
    elif [[ "$1" != "push" && "$1" != "done" ]]
    then
        ### DEFINE COMMIT ROUTINE HERE ###
        git add .
        if [[ "$1" == "--link" || "$1" == "-l" ]]
        then
            git commit -m "$2 [${branch_name:0:8}]"
        else
            git commit -m "$1"
        fi
        echo "${yellow}Yee haw!"
        ### END COMMIT ROUTINE ###
    elif [[ "$1" == "push" ]]
    then
        ### DEFINE PUSH ROUTINE HERE ###
        git push origin ${branch_name}
        if [[ "${2: -2}" == "mr" ]]
        then
            echo "${branch_name:3:8}" | pbcopy
        fi
        echo "${yellow}Yee haw!"
        ### DEFINE PUSH ROUTINE HERE ###
    else
        branch_name=""
        echo $branch_name > "${BASH_SOURCE%/*}/var.txt"
        ### DEFINE END ROUTINE HERE ###
        mv ~/Desktop/Screen\ {Shot,Recording}* /var/tmp
        git checkout master
        git pull --rebase
        echo "${yellow}Well done!"
        ### END ###
   fi
else
    echo "${yellow}Git 'er done!"
fi
